% Main Function: quantipatch
% To quantify the patchiness in a 2-dimensional space

% author:   Baihan Lin, for Olavarria Lab
% date:     Dec 2016
% update:   Dec 2017

% Starting a new analysis so we want to eliminate all old variables

clear all
close all

% I decided to use automatic method for data collection:

prompt = 'What is your folder?: ';
disp('e.g.  /Users/DoerLBH/Dropbox/git/OLab_patch_processor_3.0/test');
path = input(prompt,'s');
% /Users/DoerLBH/Dropbox/git/OLab_patch_processor_3.0/test

% Note: you may specify a folder to access all data files.

[~,list] = system(['find ' path ' -type f -name "*.tif"']);

system(['mkdir ' path '/output-' date]);
system(['cd ' path '/output-' date]);

diary(strcat(path, '/output-', date, '/report_', date, '.out'));
diary on;
disp(path);
disp(date);

files = strsplit(list);
length(files);

files = unique(files);
files = files(~cellfun('isempty',files));

% calculate the patch index

record_curve = [];
record_sd = [];

for f = 1 : length(files)
    file = files{f};
    [pi_curve, pi_sd] = patchindex_SD(file);
    
    record_curve(f) = pi_curve;
    record_sd(f) = pi_sd;
    
    disp('---------------------');
    disp(strcat('file: ',strcat(file)));
    
    % patch index from curve method
    disp(strcat('patch index (curve method): ', num2str(pi_curve)));
    
    % patch index from sd method
    disp(strcat('patch index (sd method): ', num2str(pi_sd)));
end

% figure;
% plot(pi_curve, pi_sd);
% xlabel('pi (curve method)')
% ylabel('pi (sd method)')

figure;
plot(1:6;pi_curve);
title('pi (curve method)')

figure;
plot(1:6, pi_sd);
title('pi (sd method)')
